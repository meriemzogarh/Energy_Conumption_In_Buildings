2023-09-06 09:39:14,247 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-06 09:57:48,438 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-06 10:19:00,480 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (3,)
Traceback (most recent call last):
  File "c:\Users\anasz\anaconda3\lib\site-packages\pyswarms\backend\generators.py", line 74, in generate_swarm
    lb, ub = bounds
ValueError: too many values to unpack (expected 2)
2023-09-06 12:31:11,534 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (3,)
Traceback (most recent call last):
  File "c:\Users\anasz\anaconda3\lib\site-packages\pyswarms\backend\generators.py", line 74, in generate_swarm
    lb, ub = bounds
ValueError: too many values to unpack (expected 2)
2023-09-06 12:31:44,072 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (2,)
Traceback (most recent call last):
  File "c:\Users\anasz\anaconda3\lib\site-packages\pyswarms\backend\generators.py", line 74, in generate_swarm
    lb, ub = bounds
ValueError: too many values to unpack (expected 2)
2023-09-06 12:34:12,427 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-06 12:39:41,718 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-06 12:42:22,882 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-06 12:43:38,515 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-06 12:45:32,760 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-06 12:46:33,757 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-06 12:47:06,079 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 389.9588623046875, best pos: [1.67164673 1.27377021 0.83602979]
2023-09-06 12:47:54,985 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-06 12:48:28,055 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 389.9595031738281, best pos: [1.9501451  1.75314896 1.88127797]
2023-09-06 12:49:32,809 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-06 12:50:03,294 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 389.95916748046875, best pos: [1.44609775 1.41134003 1.8958941 ]
2023-09-06 12:51:20,480 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-06 12:52:33,200 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-06 12:53:03,503 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 390.17510986328125, best pos: [0.76041206 1.08635415 1.16815043]
2023-09-06 12:54:43,509 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-06 12:55:16,750 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 389.97283935546875, best pos: [2.67321016 2.18039248 2.31913101]
2023-09-06 12:56:03,094 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-06 12:56:36,106 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 389.99420166015625, best pos: [1.32617483 1.28509816 1.25106019]
2023-09-06 13:00:11,165 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-06 13:00:44,496 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 389.9609069824219, best pos: [2.15750601 1.34110544 1.04751068]
2023-09-06 13:02:06,408 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-06 13:05:16,793 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-06 13:05:45,878 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 389.97467041015625, best pos: [0.2871497  1.17017742 0.81423537]
2023-09-06 13:07:57,228 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-06 13:08:27,467 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 389.9963684082031, best pos: [1.38005206 1.04329033 1.16599901]
2023-09-06 13:13:30,785 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-06 13:14:01,558 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 389.9588623046875, best pos: [2.72086494 1.60909112 1.4898534 ]
2023-09-06 13:14:22,419 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-06 13:14:51,956 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 389.9905090332031, best pos: [0.99876059 1.35806822 1.87255895]
2023-09-06 13:21:27,184 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-06 13:22:00,220 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 390.0848388671875, best pos: [2.21551426 1.0112294  1.06019643]
2023-09-06 13:30:43,129 - pyswarms.single.global_best - INFO - Optimize for 10 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-06 13:31:12,845 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 390.1261901855469, best pos: [1.88526036 1.22261438 0.87710842]
2023-09-06 13:34:19,236 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-06 13:38:00,717 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 389.9579162597656, best pos: [0.60687928 1.38515618 1.15257602]
2023-09-07 09:46:46,785 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (3,)
Traceback (most recent call last):
  File "c:\Users\anasz\anaconda3\lib\site-packages\pyswarms\backend\generators.py", line 74, in generate_swarm
    lb, ub = bounds
ValueError: too many values to unpack (expected 2)
2023-09-07 10:09:51,262 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 10:10:31,455 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 10:11:43,501 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 10:12:25,151 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 10:12:36,697 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 10:16:53,903 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 389.9580383300781, best pos: [0.61531023 1.71809654 1.08335771]
2023-09-07 10:17:16,094 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (3,)
Traceback (most recent call last):
  File "c:\Users\anasz\anaconda3\lib\site-packages\pyswarms\backend\generators.py", line 74, in generate_swarm
    lb, ub = bounds
ValueError: too many values to unpack (expected 2)
2023-09-07 10:20:53,651 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (3,)
Traceback (most recent call last):
  File "c:\Users\anasz\anaconda3\lib\site-packages\pyswarms\backend\generators.py", line 81, in generate_swarm
    pos = center * np.random.uniform(
  File "mtrand.pyx", line 1154, in numpy.random.mtrand.RandomState.uniform
  File "_common.pyx", line 600, in numpy.random._common.cont
  File "_common.pyx", line 517, in numpy.random._common.cont_broadcast_2
  File "__init__.pxd", line 741, in numpy.PyArray_MultiIterNew3
ValueError: shape mismatch: objects cannot be broadcast to a single shape.  Mismatch is between arg 0 with shape (30, 3) and arg 1 with shape (30, 3, 2).
2023-09-07 10:23:03,175 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (3,)
Traceback (most recent call last):
  File "c:\Users\anasz\anaconda3\lib\site-packages\pyswarms\backend\generators.py", line 74, in generate_swarm
    lb, ub = bounds
ValueError: too many values to unpack (expected 2)
2023-09-07 10:26:03,352 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 10:30:08,991 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 389.9579162597656, best pos: [2.27838943 1.27680424 0.6246329 ]
2023-09-07 10:34:18,701 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 10:39:00,947 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 389.9579772949219, best pos: [1.31698478 1.40381525 0.87925343]
2023-09-07 10:45:08,798 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 10:59:33,996 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 389.9579162597656, best pos: [1.27740486 1.48092322 1.15427786]
2023-09-07 11:08:03,818 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 11:09:10,354 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 11:09:34,823 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 11:26:59,989 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 389.9578857421875, best pos: [2.78595739 2.27602649 0.39261154 2.55608146]
2023-09-07 11:28:34,926 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 11:34:59,042 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 11:35:18,613 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 11:43:32,469 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 389.9579772949219, best pos: [1.44975203 1.67139196 1.14776544 1.26103697]
2023-09-07 11:45:46,229 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 11:53:42,910 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 389.9579162597656, best pos: [0.96944194 1.07820782 1.17755669 1.09827242]
2023-09-07 12:01:47,269 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 12:09:36,125 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 389.9579772949219, best pos: [1.73535619 1.27205262 1.14930004 1.3922357 ]
2023-09-07 12:24:27,601 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 12:25:26,885 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 12:25:59,749 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 12:28:03,619 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 12:30:15,707 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 12:32:40,435 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 12:33:58,769 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 12:34:54,056 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 12:35:54,200 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 12:36:38,057 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 12:37:05,151 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 12:37:27,464 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 12:43:29,314 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 12:44:14,258 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 12:46:35,346 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 12:47:40,094 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 12:54:38,555 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 13:03:28,724 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 13:05:06,235 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 13:12:40,723 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 389.9578857421875, best pos: [-0.26703891  0.68795758  0.3326449  -0.19444459]
2023-09-07 13:18:52,524 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 13:21:40,649 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 13:24:25,156 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 13:33:07,391 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 389.9578857421875, best pos: [ 0.90680497  0.45989846  0.33437604 -0.19585678]
2023-09-07 14:02:42,963 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 14:03:44,929 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 14:08:40,708 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 14:14:30,514 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 14:15:55,668 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 14:40:47,857 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 14:48:17,482 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 14:48:26,465 - numexpr.utils - INFO - NumExpr defaulting to 8 threads.
2023-09-07 14:50:30,897 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 14:56:36,912 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 14:57:20,838 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 14:58:24,418 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 15:10:05,630 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 15:13:30,490 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 15:15:42,057 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 15:18:49,010 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-07 15:21:54,805 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.0614839792251587, best pos: [ 0.62862516  1.11789965 -0.02796988  0.9587169 ]
2023-09-10 09:55:03,148 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-10 09:58:30,559 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.0578513145446777, best pos: [0.40160769 1.32668561 0.0505276  0.48908017]
2023-09-10 09:59:37,764 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-10 10:03:50,863 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.739062786102295, best pos: [0.88864444 1.29448961 0.02615807 0.84278905]
2023-09-10 10:06:35,485 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-10 10:11:17,946 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.1627694368362427, best pos: [ 7.94678724e-01  2.06055684e+00 -1.70972310e-03  7.31807883e-01]
2023-09-10 11:26:45,494 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-10 11:29:44,906 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.752528190612793, best pos: [0.86152256 1.34466844 0.05140522 0.6553506 ]
2023-09-10 11:30:05,720 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-10 11:32:45,776 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.0525246858596802, best pos: [1.49980748 1.57510457 0.0414103  0.39655618]
2023-09-10 11:49:22,357 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-10 11:51:59,865 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.6323728561401367, best pos: [0.51500398 1.46244873 0.05205347 0.76757483]
2023-09-10 11:55:30,556 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-10 11:59:12,119 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.309066891670227, best pos: [ 1.91601761  2.61769547 -0.1728721   0.71075485]
2023-09-10 12:02:56,213 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-10 12:05:30,365 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 2.2153265476226807, best pos: [1.04346073 1.29867701 0.06174415 0.33541897]
2023-09-11 12:04:50,726 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-11 12:09:08,267 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.5125374794006348, best pos: [ 2.74871472  2.92472012 -0.23632964  0.32895128]
2023-09-11 12:11:29,501 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-11 12:13:31,757 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-11 12:16:59,329 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.026570200920105, best pos: [1.63245254 1.51541288 0.19623425 0.51378363]
2023-09-12 12:37:11,816 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-12 12:40:25,057 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.3345221281051636, best pos: [0.34484569 1.93400874 0.11245915 0.64537079]
2023-09-12 12:41:54,976 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-12 12:44:49,287 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.1420304775238037, best pos: [1.16574048 1.21668006 0.38026003 0.59425801]
2023-09-12 12:48:03,619 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-12 12:50:46,313 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 2.1546506881713867, best pos: [0.48335757 1.26499858 0.21898223 0.42433869]
2023-09-12 12:51:04,918 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-12 12:53:58,578 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.3336872160434723, best pos: [ 0.74113718  2.806016   -0.76766089  0.26709392]
2023-09-12 12:54:08,962 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-12 12:57:22,748 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.4559493362903595, best pos: [ 1.75527734  2.21102229 -0.03307312  0.22344721]
2023-09-14 09:09:53,794 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-14 09:11:26,556 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-14 09:14:42,098 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.45913809537887573, best pos: [ 1.50754519  2.52212135 -0.0673119   0.0178917 ]
2023-09-14 09:15:37,954 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-14 09:18:57,479 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.5040799379348755, best pos: [1.85147043 2.6990414  0.20499618 1.61800595]
2023-09-14 09:24:39,291 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-14 09:27:49,443 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.8700096011161804, best pos: [1.01989073 1.62759621 0.36070304 1.01773106]
2023-09-14 09:27:55,477 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-14 09:31:16,449 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.295597791671753, best pos: [1.65155039 1.49103682 0.11050035 0.84000896]
2023-09-14 09:33:09,609 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-14 09:34:36,853 - pyswarms.single.global_best - INFO - Optimize for 50 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-09-14 09:37:33,969 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.3148705959320068, best pos: [1.1900185  1.59897076 0.3732212  0.80146206]
